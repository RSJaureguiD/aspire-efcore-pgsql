// <auto-generated />
using System;
using AspireEFCorePgSQLExample.CarsAPI.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AspireEFCorePgSQLExample.CarsAPI.Migrations
{
    [DbContext(typeof(CarsDbContext))]
    partial class CarsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("carsapi")
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AspireEFCorePgSQLExample.CarsAPI.DAL.Models.Car", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("car_guid");

                    b.Property<DateTime>("Insert")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("car_insert");

                    b.Property<Guid>("MakerGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("car_makerguid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("car_name");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("integer")
                        .HasColumnName("car_releaseyear");

                    b.Property<DateTime>("Update")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("car_update");

                    b.HasKey("Guid")
                        .HasName("cars_pk");

                    b.HasAlternateKey("MakerGuid", "Name")
                        .HasName("cars_ak1_name_maker");

                    b.ToTable("cars", "carsapi");
                });

            modelBuilder.Entity("AspireEFCorePgSQLExample.CarsAPI.DAL.Models.Maker", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("maker_guid");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("maker_country");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("maker_name");

                    b.HasKey("Guid")
                        .HasName("makers_pk");

                    b.HasAlternateKey("Name")
                        .HasName("makers_ak1_name");

                    b.ToTable("makers", "carsapi");
                });

            modelBuilder.Entity("AspireEFCorePgSQLExample.CarsAPI.DAL.Models.Car", b =>
                {
                    b.HasOne("AspireEFCorePgSQLExample.CarsAPI.DAL.Models.Maker", "Maker")
                        .WithMany("Cars")
                        .HasForeignKey("MakerGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("cars_fk1_maker");

                    b.Navigation("Maker");
                });

            modelBuilder.Entity("AspireEFCorePgSQLExample.CarsAPI.DAL.Models.Maker", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
